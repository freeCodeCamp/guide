{"version":3,"sources":["../../src/cache-dir/static-entry.js"],"names":["Html","require","e","pathChunkName","name","path","$","createElement","layout","layouts","index","props","children","module","exports","locals","callback","linkPrefix","__PREFIX_LINKS__","__LINK_PREFIX__","bodyHTML","headComponents","postBodyComponents","bodyProps","replaceBodyHTMLString","body","setHeadComponents","concat","components","setPostBodyComponents","setBodyProps","bodyComponent","location","pathname","context","layoutProps","routeProps","page","find","componentChunkName","json","jsonName","chunkManifest","unshift","__html","stats","dascripts","forEach","fetchKey","script","fetchedScript","prefixedScript","push","html"],"mappings":"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","file":"static-entry.js","sourcesContent":["import React from \"react\"\nimport { renderToString, renderToStaticMarkup } from \"react-dom/server\"\nimport { StaticRouter, Route, withRouter } from \"react-router-dom\"\nimport { kebabCase, get, merge, isArray } from \"lodash\"\nimport apiRunner from \"./api-runner-ssr\"\nimport pages from \"./pages.json\"\nimport syncRequires from \"./sync-requires\"\n\nlet Html\ntry {\n  Html = require(`../src/html`)\n} catch (e) {\n  Html = require(`./default-html`)\n}\n\nconst pathChunkName = path => {\n  const name = path === `/` ? `index` : kebabCase(path)\n  return `path---${name}`\n}\n\nconst $ = React.createElement\n\n// Use default layout if one isn't set.\nlet layout\nif (syncRequires.layouts.index) {\n  layout = syncRequires.layouts.index\n} else {\n  layout = props => <div>{props.children()}</div>\n}\n\nmodule.exports = (locals, callback) => {\n  let linkPrefix = `/`\n  if (__PREFIX_LINKS__) {\n    linkPrefix = `${__LINK_PREFIX__}/`\n  }\n\n  let bodyHTML = ``\n  let headComponents = []\n  let postBodyComponents = []\n  let bodyProps = {}\n\n  const replaceBodyHTMLString = body => {\n    bodyHTML = body\n  }\n\n  const setHeadComponents = components => {\n    headComponents = headComponents.concat(components)\n  }\n\n  const setPostBodyComponents = components => {\n    postBodyComponents = postBodyComponents.concat(components)\n  }\n\n  const setBodyProps = props => {\n    bodyProps = merge({}, bodyProps, props)\n  }\n\n  const bodyComponent = $(\n    StaticRouter,\n    {\n      location: {\n        pathname: locals.path,\n      },\n      context: {},\n    },\n    $(withRouter(layout), {\n      children: layoutProps =>\n        $(Route, {\n          children: routeProps => {\n            const props = layoutProps ? layoutProps : routeProps\n            const page = pages.find(\n              page => page.path === props.location.pathname\n            )\n            return $(syncRequires.components[page.componentChunkName], {\n              ...props,\n              ...syncRequires.json[page.jsonName],\n            })\n          },\n        }),\n    })\n  )\n\n  // Let the site or plugin render the page component.\n  apiRunner(`replaceRenderer`, {\n    bodyComponent,\n    replaceBodyHTMLString,\n    setHeadComponents,\n    setPostBodyComponents,\n    setBodyProps,\n  })\n\n  // If no one stepped up, we'll handle it.\n  if (!bodyHTML) {\n    bodyHTML = renderToString(bodyComponent)\n  }\n\n  apiRunner(`onRenderBody`, {\n    setHeadComponents,\n    setPostBodyComponents,\n    setBodyProps,\n  })\n\n  // Add the chunk-manifest as a head component.\n  const chunkManifest = require(`!raw!../public/chunk-manifest.json`)\n\n  postBodyComponents.unshift(\n    <script\n      id=\"webpack-manifest\"\n      dangerouslySetInnerHTML={{\n        __html: `\n            //<![CDATA[\n            window.webpackManifest = ${chunkManifest}\n            //]]>\n            `,\n      }}\n    />\n  )\n\n  let stats\n  try {\n    stats = require(`../public/stats.json`)\n  } catch (e) {\n    // ignore\n  }\n\n  const dascripts = [\n    `commons`,\n    `app`,\n    `layout-component---index`,\n    pathChunkName(locals.path),\n    pages.find(page => page.path === locals.path).componentChunkName,\n  ]\n  dascripts.forEach(script => {\n    const fetchKey = `assetsByChunkName[${script}]`\n\n    let fetchedScript = get(stats, fetchKey)\n\n    if (!fetchedScript) {\n      return\n    }\n\n    // If sourcemaps are enabled, then the entry will be an array with\n    // the script name as the first entry.\n    fetchedScript = isArray(fetchedScript) ? fetchedScript[0] : fetchedScript\n    const prefixedScript = `${linkPrefix}${fetchedScript}`\n\n    // Make sure we found a component.\n    if (prefixedScript === `/`) {\n      return\n    }\n\n    // Add preload <link>s for scripts.\n    headComponents.unshift(\n      <link rel=\"preload\" href={prefixedScript} as=\"script\" />\n    )\n\n    // Add script tags for the bottom of the page.\n    postBodyComponents.push(\n      <script key={prefixedScript} src={prefixedScript} />\n    )\n  })\n\n  const html = `<!DOCTYPE html>\\n ${renderToStaticMarkup(\n    <Html\n      {...bodyProps}\n      headComponents={headComponents}\n      postBodyComponents={postBodyComponents}\n      body={bodyHTML}\n      path={locals.path}\n    />\n  )}`\n  callback(null, html)\n}\n"]}