{
    "data": {
        "markdownRemark": {
            "html": "<h2 id=\"move-source-directories-pages-components-utils-etc-under-src\"><a href=\"#move-source-directories-pages-components-utils-etc-under-src\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Move source directories (pages, components, utils, etc.) under <code>src</code></h2>\n<p><a href=\"https://github.com/gatsbyjs/gatsby/issues/814\">We moved site source files under a “src”\ndirectory</a> to cleanly separate\nthem from config/data/build folders so to make integration with various\nJavaScript tooling (e.g. <a href=\"https://github.com/prettier/prettier\">Prettier</a>)\nsimpler.</p>\n<p>Everything related to webpack, loaders, Babel, React should work nearly\nidentically under v1 of Gatsby compared to v0 so this part of the migration is\nsuper easy.</p>\n<pre><code class=\"language-bash\"><span class=\"token function\">mkdir</span> src\n<span class=\"token function\">git</span> <span class=\"token function\">mv</span> pages src\n<span class=\"token function\">git</span> <span class=\"token function\">mv</span> components src\n<span class=\"token function\">git</span> <span class=\"token function\">mv</span> utils src\n<span class=\"token punctuation\">..</span>.</code></pre>\n<h2 id=\"import--prefixlink--from-gatsby-helpers-is-no-more\"><a href=\"#import--prefixlink--from-gatsby-helpers-is-no-more\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>import { prefixLink } from 'gatsby-helpers'</code> is no more</h2>\n<p>Prefixing links is now handled automatically by the new <code>&#x3C;Link></code> component\nprovided by the <code>gatsby-link</code> package.</p>\n<p>So just use <code>gatsby-link</code> everywhere and things will Just Work™.</p>\n<h2 id=\"configtoml-is-now-gatsby-configjs\"><a href=\"#configtoml-is-now-gatsby-configjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>config.toml is now gatsby-config.js</h2>\n<p>If you previously added site metadata to <code>config.toml</code>, move that into\nthe new <code>gatsby-config.js</code>.</p>\n<p>You need to remove all requires/imports of <code>config</code> in your code. Site-wide\nmetadata should now be “queried” using GraphQL.</p>\n<p>A minimal config module would look like:</p>\n<pre><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`My Sweet Gatsby Site!`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"migrate-wrapper-components-to-template-components\"><a href=\"#migrate-wrapper-components-to-template-components\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrate wrapper components to template components</h2>\n<p>In v0, there was the concept of “wrapper” components that would render each\nfile of a given file type. E.g. markdown files would be rendered by a wrapper\ncomponent at <code>wrappers/md.js</code> and JSON files <code>wrappers/json.js</code>, etc. Data\nwould be parsed from the files and automatically injected into the wrapper\ncomponents as props.</p>\n<p><strong>If you’re <em>not</em> using wrappers in your site, feel free to skip this section.</strong></p>\n<p>While this proved often intuitive and workable, it was overly prescriptive\nand restricted the types of pages that could be created due to the required\n1-to-1 relationship between files and pages.</p>\n<p>So for v1, we’re moving to a mode where sites must explicitly create pages\nand create mappings between template components and data.</p>\n<p>Gatsby’s new data system turns your data into a queryable database. You can\nquery data in any way to create pages and to pull in data into these pages.</p>\n<p>These mappings can range between straightforward and complex. E.g. a markdown blog\nwould want to create a post page for every markdown file. But it also might want to\ncreate tag pages for each tag linking to the posts using that tag. See <a href=\"https://github.com/gatsbyjs/gatsby/issues/421\">this issue\non programmatic routes</a> and this\n<a href=\"https://www.bricolage.io/gatsby-open-source-work/\">blog post introducing work on v1</a>\nfor more background on this change.</p>\n<p>Here’s an example of migrating a markdown wrapper to Gatsby v1.</p>\n<h3 id=\"add-markdown-plugins\"><a href=\"#add-markdown-plugins\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add markdown plugins</h3>\n<p>Install Gatsby plugins for handling markdown files.</p>\n<p><code>npm install --save gatsby-source-filesystem@next gatsby-transformer-remark@next gatsby-remark-copy-linked-files@next gatsby-remark-prismjs@next gatsby-remark-responsive-iframe@next gatsby-remark-responsive-image@next gatsby-remark-smartypants@next gatsby-plugin-sharp@next</code></p>\n<p>Next add them to your <code>gatsby-config.js</code> file. Make your config file look something\nlike the following:</p>\n<pre><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`My Sweet Gatsby Site!`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-filesystem`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`pages`</span></span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/pages/`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-remark`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-remark-responsive-image`</span></span><span class=\"token punctuation\">,</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              maxWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">690</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-remark-responsive-iframe`</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token template-string\"><span class=\"token string\">`gatsby-remark-prismjs`</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token template-string\"><span class=\"token string\">`gatsby-remark-copy-linked-files`</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token template-string\"><span class=\"token string\">`gatsby-remark-smartypants`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-sharp`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"create-slugs-for-markdown-files\"><a href=\"#create-slugs-for-markdown-files\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create slugs for markdown files</h3>\n<p>It’s handy to store the pathname of “slug” for each markdown page with the\nmarkdown data. This let’s you easily query the slug from multiple places.</p>\n<p>Here’s how you do that.</p>\n<pre><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// In your gatsby-node.js</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\nexports<span class=\"token punctuation\">.</span>onCreateNode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> boundActionCreators<span class=\"token punctuation\">,</span> getNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> boundActionCreators\n  <span class=\"token keyword\">let</span> slug\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token template-string\"><span class=\"token string\">`MarkdownRemark`</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fileNode <span class=\"token operator\">=</span> <span class=\"token function\">getNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> parsedFilePath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>fileNode<span class=\"token punctuation\">.</span>relativePath<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parsedFilePath<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> <span class=\"token template-string\"><span class=\"token string\">`index`</span></span> <span class=\"token operator\">&amp;&amp;</span> parsedFilePath<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">!==</span> <span class=\"token template-string\"><span class=\"token string\">``</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>dir<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parsedFilePath<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">===</span> <span class=\"token template-string\"><span class=\"token string\">``</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      slug <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parsedFilePath<span class=\"token punctuation\">.</span>dir<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Add slug as a field on the node.</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> fieldName<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`slug`</span></span><span class=\"token punctuation\">,</span> fieldValue<span class=\"token punctuation\">:</span> slug <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Now we can create pages for each markdown file using our slug. In the same\n<code>gatsby-node.js</code> file add:</p>\n<pre><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span>createPages <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> boundActionCreators <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> boundActionCreators\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">const</span> blogPost <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/templates/blog-post.js\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Query for all markdown \"nodes\" and for the slug we previously created.</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token string\">`\n        {\n          allMarkdownRemark {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n              }\n            }\n          }\n        }\n      `</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span>\n          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Create blog posts pages.</span>\n        result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>edge <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">// required</span>\n            component<span class=\"token punctuation\">:</span> blogPost<span class=\"token punctuation\">,</span>\n            context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              slug<span class=\"token punctuation\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>So we’ve now generated the pathname or slug for each markdown page as well as\ntold Gatsby about these pages. You’ll notice above that we reference a blog\npost template file when creating the pages. We haven’t created that yet so\nlet’s do it.</p>\n<p>In your <code>src</code> directory, create a templates directory and add <code>blog-post.js</code>.</p>\n<p>This is a normal React.js component with a special Gatsby twist—a GraphQL query\nspecifying the data needs of the component. As a start, make the component look\nlike the following. You can make it more complex once the basics are working.</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostTemplate</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> post <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>markdownRemark\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> __html<span class=\"token punctuation\">:</span> post<span class=\"token punctuation\">.</span>html <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> BlogPostTemplate\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\nquery BlogPostBySlug($slug: String!) {\n  markdownRemark(fields: { slug: { eq: $slug }}) {\n    html\n    frontmatter {\n      title\n    }\n  }\n}\n`</span></span></code></pre>\n<p>At the bottom of the file you’ll notice the graphql query. This is how pages\nand templates in Gatsby v1 get their data. In v0, wrapper components had little\ncontrol over what data they got. In v1, templates and pages can query for\nexactly the data they need.</p>\n<p>There will be a more in-depth tutorial and GraphQL-specific documentation soon\nbut in the meantime, check out <a href=\"http://graphql.org/\">http://graphql.org/</a> and play around on Gatsby’s\nbuilt-in GraphQL IDE (Graph<em>i</em>QL) which can be reached when you start the\ndevelopment server.</p>\n<p>At this point you should have working markdown pages when you run <code>gatsby develop</code>! Now start gradually adding back what you had in your wrapper\ncomponent adding HTML elements, styles, and extending the GraphQL query as\nneeded.</p>\n<p>Repeat this process for other wrapper components you were using.</p>\n<h2 id=\"htmljs\"><a href=\"#htmljs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html.js</h2>\n<p>This should generally work the same as in v0 except there are two additional\nprops that must be added to your HTML component. Somewhere in your <code>&#x3C;head></code> add\n<code>{this.props.headComponents}</code> and somewhere at the end of your body, remove\nloading <code>bundle.js</code> and add <code>{this.props.postBodyComponents}</code>.</p>\n<h2 id=\"_templatejs-is-now-srclayoutsindexjs\"><a href=\"#_templatejs-is-now-srclayoutsindexjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>_template.js is now src/layouts/index.js</h2>\n<p>You should be able to copy your <code>_template.js</code> file directly making only one\nchange making <code>this.props.children</code> a function call so <code>this.props.children()</code>.\nThe rational for this change is described <a href=\"https://github.com/gatsbyjs/gatsby/pull/940#issuecomment-300878300\">in this PR\ncomment</a>.</p>\n<p>Nested layouts are <em>not</em> supported yet but are on the roadmap for v1.</p>",
            "frontmatter": {
                "title": "Migrating from v0 to v1"
            }
        }
    },
    "pathContext": {
        "slug": "/docs/migrating-from-v0-to-v1/"
    }
}