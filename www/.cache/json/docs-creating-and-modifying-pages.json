{
    "data": {
        "markdownRemark": {
            "html": "<p>Gatsby makes it easy to programatically control your pages.</p>\n<p>Pages can be created in three ways:</p>\n<ul>\n<li>In your site code by implementing the API <code>createPages</code></li>\n<li>Gatsby core automatically turns React compnents in <code>src/pages</code> into pages</li>\n<li>Plugins can also implement <code>createPages</code> and create pages for you</li>\n</ul>\n<h2 id=\"modifying-pages-created-by-core-or-plugins\"><a href=\"#modifying-pages-created-by-core-or-plugins\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modifying pages created by core or plugins</h2>\n<p>Gatsby core and plugins can automatically create pages for you. Sometimes\nthe default isn’t quite what you want and you need to modify the created\npage objects.</p>\n<h3 id=\"removing-trailing-slashes\"><a href=\"#removing-trailing-slashes\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Removing trailing slashes</h3>\n<p>A common reason for needing to modify automatically created pages is to remove\ntrailing slashes.</p>\n<p>To do this, in your site’s <code>gatsby-node.js</code> add code\nsimilar to the following:</p>\n<pre><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// Implement the Gatsby API “onCreatePage”. This is</span>\n<span class=\"token comment\" spellcheck=\"true\">// called after every page is created.</span>\nexports<span class=\"token punctuation\">.</span>onCreatePage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> boundActionCreators <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage<span class=\"token punctuation\">,</span> deletePage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> boundActionCreators\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Remove trailing slash</span>\n    <span class=\"token keyword\">const</span> oldPath <span class=\"token operator\">=</span> page<span class=\"token punctuation\">.</span>path\n    <span class=\"token comment\" spellcheck=\"true\">// Removing '/' would result in a path that's</span>\n    <span class=\"token comment\" spellcheck=\"true\">// an empty string which is invalid</span>\n    page<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> <span class=\"token template-string\"><span class=\"token string\">`/`</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> page<span class=\"token punctuation\">.</span>path <span class=\"token punctuation\">:</span> page<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\/$/</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">``</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span>path <span class=\"token operator\">!==</span> oldPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// Remove the old page</span>\n      <span class=\"token function\">deletePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> oldPath <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// Add the new page</span>\n      <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"creating-client-only-routes\"><a href=\"#creating-client-only-routes\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating client-only routes</h3>\n<p>If you’re creating a “hybrid” Gatsby app with both statically rendered pages\nas well as client-only routes e.g. an app that combines marketing pages and\nyour app that lives under <code>/app/*</code>, you want to add code to your <code>gatsby-node.js</code>\nlike the following:</p>\n<pre><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">// Implement the Gatsby API “onCreatePage”. This is</span>\n<span class=\"token comment\" spellcheck=\"true\">// called after every page is created.</span>\nexports<span class=\"token punctuation\">.</span>onCreatePage <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">,</span> boundActionCreators <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> boundActionCreators\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// page.matchPath is a special key that's used for matching pages</span>\n    <span class=\"token comment\" spellcheck=\"true\">// only on the client.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/^\\/app/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      page<span class=\"token punctuation\">.</span>matchPath <span class=\"token operator\">=</span> <span class=\"token string\">\"/app/:path\"</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// Update the page.</span>\n      <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"creating-pages\"><a href=\"#creating-pages\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating pages</h2>\n<p>Often you will need to programmatically create pages. For example, you have\nmarkdown files that each should be a page.</p>\n<p>TODO finish this once it’s more settled how to modify nodes to add slugs and\nother special fields that we want to associate with a node. Perhaps <code>createNodeField</code>.</p>",
            "frontmatter": {
                "title": "Creating and modifying pages"
            }
        }
    },
    "pathContext": {
        "slug": "/docs/creating-and-modifying-pages/"
    }
}