{
    "data": {
        "markdownRemark": {
            "html": "<p><div>\n          <a\n            class=\"gatsby-resp-image-link\"\n            href=\"/36d57a55e7958223d8e1edc7d4bb0a38-c3e50.png\"\n            style=\"display: block\"\n            target=\"_blank\"\n          >\n            <div\n              class=\"gatsby-resp-image-wrapper\"\n              style=\"position: relative; z-index: -1; \"\n            >\n              <div\n                class=\"gatsby-resp-image-background-image\"\n                style=\"padding-bottom: 53.50262697022766%;position: relative; width: 100%; bottom: 0; left: 0; background-image: url('/36d57a55e7958223d8e1edc7d4bb0a38-fbfd7.png'); background-size: cover;\"\n              >\n                <img\n                  class=\"gatsby-resp-image-image\"\n                  style=\"width: 100%; margin: 0; vertical-align: middle; position: absolute; box-shadow: inset 0px 0px 0px 400px #f7f0eb;\"\n                  alt=\"Gatsbygram\"\n                  title=\"\"\n                  src=\"/36d57a55e7958223d8e1edc7d4bb0a38-fbfd7.png\"\n                  srcset=\"/36d57a55e7958223d8e1edc7d4bb0a38-bf506.png 173w,\n/36d57a55e7958223d8e1edc7d4bb0a38-e924d.png 345w,\n/36d57a55e7958223d8e1edc7d4bb0a38-fbfd7.png 690w,\n/36d57a55e7958223d8e1edc7d4bb0a38-89b1d.png 1035w,\n/36d57a55e7958223d8e1edc7d4bb0a38-9c993.png 1380w,\n/36d57a55e7958223d8e1edc7d4bb0a38-00d0f.png 2070w,\n/36d57a55e7958223d8e1edc7d4bb0a38-c3e50.png 2284w\"\n                  sizes=\"(max-width: 690px) 100vw, 690px\"\n                />\n              </div>\n            </div>\n          </a>\n          </div></p>\n<p><a href=\"https://gatsbygram.gatsbyjs.org\">Gatsbygram</a> is a clone of Instagram\nbuilt with Gatsby 1.0.0-alpha16 and is being continually updated as we\nmake our way towards our 1.0 release.</p>\n<p>The <a href=\"https://github.com/gatsbyjs/gatsby/tree/1.0/examples/gatsbygram\">source code for\nGatsbygram</a>\nlives in the Gatsby monorepo. See the instructions at the end for how to\nstart playing with the code!</p>\n<div>\n<video controls=\"controls\" autoplay=\"true\" loop=\"true\">\n  <source type=\"video/mp4\" src=\"/gatsbygram.mp4\"></source>\n  <p>Your browser does not support the video element.</p>\n</video>\n</div>\n<h2 id=\"what-is-gatsby\"><a href=\"#what-is-gatsby\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is Gatsby</h2>\n<p>Gatsby is a JavaScript web framework that let’s you build fast,\ndynamic, mobile-ready websites <em>without</em> an advanced degree in\nJavaScript wizardry.</p>\n<p>It combines the fast performance of static websites with the powerful\nabstractions, tools, and client capabilities of the React.js world.</p>\n<h3 id=\"gatsby-is-fast\"><a href=\"#gatsby-is-fast\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby is fast</h3>\n<p><a href=\"/docs/prpl-pattern/\">Gatsby automatically optimizes your site for the modern\nweb</a>. You provide pages and Gatsby stitches them\ntogether so they load as fast as possible.</p>\n<p>As proof of this, Gatsbygram loads <em>2-3x faster</em> than the real Instagram site.</p>\n<p>I tested Gatsbygram and Instagram on\n<a href=\"https://www.webpagetest.org/\">webpagetest.org</a> using a simulated 3G\nnetwork and a Moto G4 smartphone—a budget Android typical of many\nlower-end phones used today. The median <a href=\"https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index\">speed\nindex</a>\nscore for\n<a href=\"http://www.webpagetest.org/result/170310_XP_11AS/\">Gatsbygram</a> was 3151\nvs. 8251 for\n<a href=\"http://www.webpagetest.org/result/170310_PC_11AZ/\">Instagram</a>.</p>\n<p><div>\n          <a\n            class=\"gatsby-resp-image-link\"\n            href=\"/5601858ddaada0a99782cd925ec04ddd-f631d.png\"\n            style=\"display: block\"\n            target=\"_blank\"\n          >\n            <div\n              class=\"gatsby-resp-image-wrapper\"\n              style=\"position: relative; z-index: -1; \"\n            >\n              <div\n                class=\"gatsby-resp-image-background-image\"\n                style=\"padding-bottom: 10.705318420451952%;position: relative; width: 100%; bottom: 0; left: 0; background-image: url('/5601858ddaada0a99782cd925ec04ddd-fbfd7.png'); background-size: cover;\"\n              >\n                <img\n                  class=\"gatsby-resp-image-image\"\n                  style=\"width: 100%; margin: 0; vertical-align: middle; position: absolute; box-shadow: inset 0px 0px 0px 400px #f7f0eb;\"\n                  alt=\"gatsbygram vs. instagram filmstrip\"\n                  title=\"\"\n                  src=\"/5601858ddaada0a99782cd925ec04ddd-fbfd7.png\"\n                  srcset=\"/5601858ddaada0a99782cd925ec04ddd-bf506.png 173w,\n/5601858ddaada0a99782cd925ec04ddd-e924d.png 345w,\n/5601858ddaada0a99782cd925ec04ddd-fbfd7.png 690w,\n/5601858ddaada0a99782cd925ec04ddd-89b1d.png 1035w,\n/5601858ddaada0a99782cd925ec04ddd-9c993.png 1380w,\n/5601858ddaada0a99782cd925ec04ddd-00d0f.png 2070w,\n/5601858ddaada0a99782cd925ec04ddd-f631d.png 4381w\"\n                  sizes=\"(max-width: 690px) 100vw, 690px\"\n                />\n              </div>\n            </div>\n          </a>\n          </div><em>Filmstrip of Gatsbygram (top)\nand Instagram (bottom) loading on webpagetest.org</em></p>\n<p>The second repeat view is even faster for Gatsbygram as it now loads\nfrom its service worker. It has <em>pixels on the screen in under a 1/2\nsecond on a budget Android device</em>! And for both the initial and repeat\nview, Gatsbygram  <em>finishes</em> loading a full second before Instagram gets\nstarted.</p>\n<p><div>\n          <a\n            class=\"gatsby-resp-image-link\"\n            href=\"/14335d63b8d7a07b951f781833ab5bdb-376c1.png\"\n            style=\"display: block\"\n            target=\"_blank\"\n          >\n            <div\n              class=\"gatsby-resp-image-wrapper\"\n              style=\"position: relative; z-index: -1; \"\n            >\n              <div\n                class=\"gatsby-resp-image-background-image\"\n                style=\"padding-bottom: 30.99801718440185%;position: relative; width: 100%; bottom: 0; left: 0; background-image: url('/14335d63b8d7a07b951f781833ab5bdb-fbfd7.png'); background-size: cover;\"\n              >\n                <img\n                  class=\"gatsby-resp-image-image\"\n                  style=\"width: 100%; margin: 0; vertical-align: middle; position: absolute; box-shadow: inset 0px 0px 0px 400px #f7f0eb;\"\n                  alt=\"gatsbygram vs. instagram filmstrip repeat\nload\"\n                  title=\"\"\n                  src=\"/14335d63b8d7a07b951f781833ab5bdb-fbfd7.png\"\n                  srcset=\"/14335d63b8d7a07b951f781833ab5bdb-bf506.png 173w,\n/14335d63b8d7a07b951f781833ab5bdb-e924d.png 345w,\n/14335d63b8d7a07b951f781833ab5bdb-fbfd7.png 690w,\n/14335d63b8d7a07b951f781833ab5bdb-89b1d.png 1035w,\n/14335d63b8d7a07b951f781833ab5bdb-9c993.png 1380w,\n/14335d63b8d7a07b951f781833ab5bdb-376c1.png 1513w\"\n                  sizes=\"(max-width: 690px) 100vw, 690px\"\n                />\n              </div>\n            </div>\n          </a>\n          </div><em>Filmstrip of a repeat view\nof Gatsbygram (top) and Instagram (bottom) loading on webpagetest.org</em></p>\n<p>The difference in Time to Interactivity (TTI) (measure of how long\nbefore the user can actually interact with the page e.g. click on a\nlink) between the sites is just as dramatic. Gatsbygram’s TTI is 6.1s vs\n14.1s for Instagram.</p>\n<ul>\n<li><a href=\"http://www.webpagetest.org/result/170310_XP_11AS/\">Gatsbygram’s webpagetest\nresults</a></li>\n<li><a href=\"http://www.webpagetest.org/result/170310_PC_11AZ/\">Instagram’s webpagetest\nresults</a></li>\n</ul>\n<h3 id=\"gatsby-is-built-for-the-next-billion-internet-users\"><a href=\"#gatsby-is-built-for-the-next-billion-internet-users\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby is built for the next billion internet users</h3>\n<p>As <a href=\"http://ben-evans.com/benedictevans/2015/5/13/the-smartphone-and-the-sun\">Benedict Evans has\nnoted</a>,\nthe next billion people poised to come online will be using the internet\nalmost exclusively through smartphones.</p>\n<p>Smartphones with decent specs (as good or better than the Moto G4), a\ngreat browser, but <em>without</em> a reliable internet connection.</p>\n<p>Gatsby uses modern web performance ideas (e.g.\n<a href=\"https://developers.google.com/web/fundamentals/performance/prpl-pattern/\">PRPL</a>)\ndeveloped by the Google Chrome Developer Relations team and others to\nhelp websites work well on modern browsers with unreliable networks.</p>\n<p>Sites built with Gatsby run as much as possible in the client so\nregardless of the network conditions—good, bad, or\nnonexistent—things will keep working.</p>\n<p>Many of the top e-commerce websites in areas where people are coming\nonline for the first time are developing their websites using these\ntechniques.</p>\n<p>Read Google’s case studies on:</p>\n<ul>\n<li><a href=\"https://developers.google.com/web/showcase/2016/flipkart\">Flipkart\n(India)</a></li>\n<li><a href=\"https://developers.google.com/web/showcase/2016/konga\">Konga\n(Nigeria)</a></li>\n<li><a href=\"https://developers.google.com/web/showcase/2016/housing\">Housing.com\n(India)</a></li>\n</ul>\n<h3 id=\"gatsby-is-simple\"><a href=\"#gatsby-is-simple\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby is simple</h3>\n<p>Modern JavaScript websites are too complex to rely on developers always\nconfiguring things correctly. Gatsby simplifies website development by\nextracting configuration out of your site and moving it into the\nframework and community plugins.</p>\n<p>You give Gatsby React.js components, data, and styles and Gatsby gives you\nback an optimized website.</p>\n<p>Gatsbygram is a completely vanilla Gatsby site. Its optimizations are\nfrom the framework.</p>\n<p>Gatsby includes a full modern JavaScript toolchain\n(Babel/webpack/Uglify) with optimized production builds and\nan innovative <em>declarative</em> asset pipeline.</p>\n<p>For Gatsbygram, Gatsby generates over <em>1000</em> image thumbnails for\nresponsive images without <em>any</em> custom scripting by leveraging the\nGatsby image processing plugin\n<a href=\"/docs/packages/gatsby-transformer-sharp/\">gatsby-transformer-sharp</a>.</p>\n<p>Stop wasting time and build something!</p>\n<h2 id=\"app-structure\"><a href=\"#app-structure\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App structure</h2>\n<p>All static site generators create a set of files that determine the\nrouting in your site. Typically, you define the output file structure\n(and thus URL structure) of your site by way of the input structure. For\nexample the input structure:</p>\n<pre><code>my-site/\n  index.md\n  blogs/\n    blog1.md</code></pre>\n<p>…would be transformed to:</p>\n<pre><code>my-site/\n  index.html\n  blogs/\n    blog1.html</code></pre>\n<p>This is fine at first, but can be limiting. For example, in Gatsbygram,\nwe have a JSON data blob scraped from an Instagram user profile. From\nthis we want to generate a page for each image. We couldn’t do this with\na typical static site generator, but Gatsby lets you define routes\nprogrammatically through the <code>createPages</code> API using any data you have\navailable.</p>\n<p>Here is how we define pages from our JSON data for Gatsbygram at build time in\nthe site’s <a href=\"https://github.com/gatsbyjs/gatsby/blob/1.0/examples/gatsbygram/gatsby-node.js\"><code>gatsby-node.js</code>\nfile</a>:</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">const</span> _ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`lodash`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> Promise <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`bluebird`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`path`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> slug <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`slug`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> slash <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`slash`</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Implement the Gatsby API “createPages”. This is</span>\n<span class=\"token comment\" spellcheck=\"true\">// called after the Gatsby bootstrap is finished so you have</span>\n<span class=\"token comment\" spellcheck=\"true\">// access to any information necessary to programatically</span>\n<span class=\"token comment\" spellcheck=\"true\">// create pages.</span>\nexports<span class=\"token punctuation\">.</span>createPages <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> boundActionCreators <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> boundActionCreators\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// The “graphql” function allows us to run arbitrary</span>\n    <span class=\"token comment\" spellcheck=\"true\">// queries against this Gatsbygram's graphql schema. Think of</span>\n    <span class=\"token comment\" spellcheck=\"true\">// it like Gatsbygram has a built-in database constructed</span>\n    <span class=\"token comment\" spellcheck=\"true\">// from static data that you can run queries against.</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Post is a data node type derived from data/posts.json</span>\n    <span class=\"token comment\" spellcheck=\"true\">// which is created when scrapping Instagram. “allPostsJson”</span>\n    <span class=\"token comment\" spellcheck=\"true\">// is a \"connection\" (a GraphQL convention for accessing</span>\n    <span class=\"token comment\" spellcheck=\"true\">// a list of nodes) gives us an easy way to query all</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Post nodes.</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token string\">`\n      {\n        allPostsJson(limit: 1000) {\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      }\n    `</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Create image post pages.</span>\n        <span class=\"token keyword\">const</span> postTemplate <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`src/templates/post-page.js`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\" spellcheck=\"true\">// We want to create a detailed page for each</span>\n        <span class=\"token comment\" spellcheck=\"true\">// Instagram post. Since the scrapped Instagram data</span>\n        <span class=\"token comment\" spellcheck=\"true\">// already includes an ID field, we just use that for</span>\n        <span class=\"token comment\" spellcheck=\"true\">// each page's path.</span>\n        _<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allPostsJson<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">,</span> edge <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\" spellcheck=\"true\">// Gatsby uses Redux to manage its internal state.</span>\n          <span class=\"token comment\" spellcheck=\"true\">// Plugins and sites can use functions like \"createPage\"</span>\n          <span class=\"token comment\" spellcheck=\"true\">// to interact with Gatsby.</span>\n          <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\" spellcheck=\"true\">// Each page is required to have a `path` as well</span>\n            <span class=\"token comment\" spellcheck=\"true\">// as a template component. The `context` is</span>\n            <span class=\"token comment\" spellcheck=\"true\">// optional but is often necessary so the template</span>\n            <span class=\"token comment\" spellcheck=\"true\">// can query data specific to each page.</span>\n            path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">slug</span><span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/`</span></span><span class=\"token punctuation\">,</span>\n            component<span class=\"token punctuation\">:</span> <span class=\"token function\">slash</span><span class=\"token punctuation\">(</span>postTemplate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              id<span class=\"token punctuation\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"using-templates\"><a href=\"#using-templates\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using templates</h2>\n<p>Gatsby uses standard React.js components to render pages. When you\ndefine a page in the <code>createPages</code> API, you specify its component.\nThose components, usually called templates, get reused with\npage-specific data to generate the different pages.</p>\n<p>As you can see above, when defining a page, we can set “context” data, which is\npassed as a <code>prop</code> to the component and as a <a href=\"http://graphql.org/learn/queries/#variables\">GraphQL\nvariable</a> in our <code>GraphQL</code> query.\nFor the ”<a href=\"https://github.com/gatsbyjs/gatsby/blob/1.0/examples/gatsbygram/src/templates/post-page.js\">post\ntemplate</a>”,\nwe pass the id to the post. Below we use that id to query our <code>GraphQL</code> schema\nand return a fully formed page:</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> PostDetail <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/post-detail\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PostTemplate</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token comment\" spellcheck=\"true\">// PostDetail is used for this detail page and</span>\n      <span class=\"token comment\" spellcheck=\"true\">// also in the modal.</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostDetail</span> <span class=\"token attr-name\">post</span><span class=\"token script language-javascript\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PostTemplate\n\n<span class=\"token comment\" spellcheck=\"true\">// The post template's GraphQL query. Notice the “id”</span>\n<span class=\"token comment\" spellcheck=\"true\">// variable which is passed in. We set this on the page</span>\n<span class=\"token comment\" spellcheck=\"true\">// context in gatsby-node.js.</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">// All GraphQL queries in Gatsby are run at build-time and</span>\n<span class=\"token comment\" spellcheck=\"true\">// loaded as plain JSON files so have minimal client cost.</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`\n  query PostPage($id: String!) {\n    # Select the post which equals this id.\n    posts(id: { eq: $id }) {\n      # Specify the fields from the post we need.\n      username\n      avatar\n      likes\n      id\n      text\n      # Date fields have special arguments. This one computes\n      # how many weeks have passed since the post was created.\n      # All calculations like this (like all GraphQL query\n      # activity) happens at build-time! So has minimal cost\n      # for the client.\n      weeksAgo: time(difference: \"weeks\")\n      image {\n        children {\n          ... on ImageSharp {\n            # Here we query for *multiple* image thumbnails to be\n            # created. So with no effort on our part, 100s of\n            # thumbnails are created. This makes iterating on\n            # designs effortless as we simply change the args\n            # for the query and we get new thumbnails.\n            big: responsiveSizes(maxWidth: 640) {\n              src\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n`</span></span></code></pre>\n<h2 id=\"creating-reactjs-component-pages\"><a href=\"#creating-reactjs-component-pages\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating React.js component pages</h2>\n<p>In addition to creating pages for our Instagram photos, we want to make\nan index page for browsing all photos. To build this index page, Gatsby\nlets us create pages using simple React.js components.</p>\n<pre><code>pages/\n  index.js\n  about.js</code></pre>\n<p>These React component pages can query the Gatsbygram GraphQL schema for\ndata and are automatically converted into their own pages at\n<code>gatsbygram.gatsbyjs.org/</code> and <code>gatsbygram.gatsbyjs.org/about/</code>.</p>\n<p>Gatsbygram’s <code>about.js</code> is a simple React component with no query.\n<code>index.js</code> is more complex. It queries for thumbnails for all images and\nhas an infinite scroll implementation to lazy load in image thumbnails.</p>\n<p><a href=\"https://github.com/gatsbyjs/gatsby/blob/1.0/examples/gatsbygram/src/pages/index.js\">Read pages/index.js on\nGithub</a><br>\n<a href=\"https://github.com/gatsbyjs/gatsby/blob/1.0/examples/gatsbygram/src/pages/about.js\">Read pages/about.js on\nGithub</a></p>\n<h2 id=\"the-layout-component\"><a href=\"#the-layout-component\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Layout Component</h2>\n<p>Each Gatsby site has a top-level layout component at\n<code>layouts/default.js</code>. This layout component is used on every page of\nyour site so can contain things like your header, footer, and default\npage structure. It is also used as the ”<a href=\"https://developers.google.com/web/updates/2015/11/app-shell\">app\nshell</a>”\nwhen loading your site from a service worker.</p>\n<p>A simple layout component might look something like this.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby-link\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Layout</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  render <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Link</span>\n          <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">></span></span>\n          Home\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Link</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">/* Render children pages */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Layout</code></pre>\n<p>Every page will be rendered as children of the <code>Layout</code> component:</p>\n<pre><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Page</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Gatsbygram’s layout component is somewhat more complicated than most\nsites as it has logic to show clicked images in either a modal on larger\nscreens or on their own page on smaller screens.</p>\n<p><a href=\"https://github.com/gatsbyjs/gatsby/blob/1.0/examples/gatsbygram/src/layouts/default.js\">Read Gatsbygram’s Layout component on\nGithub</a>.</p>\n<h2 id=\"client-routing-and-pre-caching\"><a href=\"#client-routing-and-pre-caching\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client routing and pre-caching</h2>\n<p>Gatsby loads first a static server-rendered HTML page and then the\nJavasScript to convert the site into a web application. Which means that\nclicking around the site doesn’t require a page reload.  Gatsby\n<em>pre-caches</em> code and data needed for other pages so that clicking on a\nlink loads the next page instantly.</p>\n<p>All the setup for this is handled behind the scenes. Gatsby uses <a href=\"https://github.com/ReactTraining/react-router\">React\nRouter</a> under the hood\nbut generates all the configuration for you.</p>\n<p>Normally page resources are pre-cached with a service worker. But as\nseveral browsers (Safari/Microsoft Edge) still don’t support Service\nWorkers, the <a href=\"/docs/packages/gatsby-link/\">Gatsby <code>&#x3C;Link></code> component</a>\npre-caches resources for pages it links to by loading them into memory.</p>\n<h2 id=\"plugins\"><a href=\"#plugins\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Plugins</h2>\n<p>Gatsby has always had a rich set of lifecycle APIs to allow you to hook\ninto various events during development, building, and in the client.</p>\n<p>Gatsby 1.0 adds new APIs and also adds a <a href=\"/docs/plugins/\">new plugin\narchitecture</a>. So functionality can now be extracted from sites\nand made reusable. Most of the new functionality in Gatsby 1.0 is\npowered by plugins.</p>\n<p>Plugins are added to a site in its <code>gatsby-config.js</code>. Here’s what\nGatsbygram’s config file looks like:</p>\n<pre><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Gatsbygram`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\" spellcheck=\"true\">/*\n     * Gatsby's data processing layer begins with “source”\n     * plugins.  You can source data nodes from anywhere but\n     * most sites, like Gatsbygram, will include data from\n     * the filesystem so we start here with\n     * “gatsby-source-filesystem”.\n     *\n     * A site can have as many instances of\n     * gatsby-source-filesystem as you need.  Each plugin\n     * instance is configured with a root path where it then\n     * recursively reads in files and adds them to the data\n     * tree.\n     */</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-filesystem`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`data`</span></span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/data`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This plugin exposes helper functions for processing</span>\n    <span class=\"token comment\" spellcheck=\"true\">// images with the NPM package “sharp”. It's used by</span>\n    <span class=\"token comment\" spellcheck=\"true\">// several other plugins.</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-sharp`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This plugin identifies file nodes that are images and</span>\n    <span class=\"token comment\" spellcheck=\"true\">// transforms these to create new “ImageSharp” nodes.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// With them you can resize images and</span>\n    <span class=\"token comment\" spellcheck=\"true\">// generate responsive image thumbnails.</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-sharp`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This plugin transforms JSON file nodes.</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-json`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This plugin sets up the popular css-in-js library</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Glamor. It handles adding a Babel plugin and webpack</span>\n    <span class=\"token comment\" spellcheck=\"true\">// configuration as well as setting up optimized server</span>\n    <span class=\"token comment\" spellcheck=\"true\">// rendering and client re-hydration.</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-glamor`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This plugin takes your configuration and generates a</span>\n    <span class=\"token comment\" spellcheck=\"true\">// web manifest file so Gatsbygram can be added to your</span>\n    <span class=\"token comment\" spellcheck=\"true\">// homescreen on Android.</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-manifest`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Gatsbygram`</span></span><span class=\"token punctuation\">,</span>\n        short_name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Gatsbygram`</span></span><span class=\"token punctuation\">,</span>\n        start_url<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`/`</span></span><span class=\"token punctuation\">,</span>\n        background_color<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`#f7f7f7`</span></span><span class=\"token punctuation\">,</span>\n        theme_color<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`#191919`</span></span><span class=\"token punctuation\">,</span>\n        display<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`minimal-ui`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This plugin generates a service worker and AppShell</span>\n    <span class=\"token comment\" spellcheck=\"true\">// html file so the site works offline and is otherwise</span>\n    <span class=\"token comment\" spellcheck=\"true\">// resistant to bad networks. Works with almost any</span>\n    <span class=\"token comment\" spellcheck=\"true\">// site!</span>\n    <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-offline`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This plugin sets up Google Analytics for you.</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-google-analytics`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        trackingId<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`UA-91652198-1`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"styles\"><a href=\"#styles\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Styles</h2>\n<p>Gatsbygram uses two popular and complementary css-in-js libraries,\n<a href=\"https://github.com/KyleAMathews/typography.js\">Typography.js</a> and\n<a href=\"https://github.com/threepointone/glamor\">Glamor</a>.</p>\n<p>Typography.js is a powerful toolkit for building websites with beautiful\ndesign.</p>\n<p>Gatsbygram uses Typography.js to generate the <em>global</em> styles for the\nsite helping set the overall feel of the design.</p>\n<p>Glamor lets you write <em>real CSS</em> in JavaScript inline in your React.js\ncomponents. It is used for <em>component</em> styles.</p>\n<p>Typography.js exposes two helper JavaScript functions, <code>rhythm</code> and\n<code>scale</code> to help keep your design in sync as you make changes. Instead of\nusing hard-coded spacing values (which break as soon as you change your\nglobal theme), you use the Typography.js helper functions e.g.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> rhythm<span class=\"token punctuation\">,</span> scale <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../utils/typography\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SampleComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React</span> <span class=\"token punctuation\">{</span>\n  render <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div\n        <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">/* The “css” prop works the same as the built-in “style” prop */</span><span class=\"token punctuation\">}</span>\n        css<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          <span class=\"token comment\" spellcheck=\"true\">// 1 rhythm is equal to the height of the line-height of</span>\n          <span class=\"token comment\" spellcheck=\"true\">// normal body text.</span>\n          padding<span class=\"token punctuation\">:</span> <span class=\"token function\">rhythm</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1\n          css<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\" spellcheck=\"true\">// Make this h1 slightly larger than normal.</span>\n            <span class=\"token comment\" spellcheck=\"true\">// By default, h1 is set to a scale value of 1.</span>\n            <span class=\"token operator\">...</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          My sweet title\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello friends<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Together they allow you to quickly iterate on designs.</p>\n<p>They also contribute to Gatsbygram’s excellent loading speed. The holy\ngrail of CSS performance is <em>inlined critical CSS</em>. Meaning a) only ship\na page with the CSS necessary to render that page and b) inline it in\nthe <code>&#x3C;head></code> instead of putting it in a separate file. There are various\ntools to make this happen but they tend to involve extensive\nconfiguration and heavy post-processing.</p>\n<p>But with Typography.js and Glamor you get optimized CSS with no\ntedious, error-prone bookkeeping. Typography.js (by definition)\ngenerates only global styles so its styles are included on every page.\nGlamor includes some <a href=\"https://github.com/threepointone/glamor/blob/master/docs/server.md\">clever server-rendering\noptimizations</a>\nwhich I’ve implemented in the <a href=\"/docs/packages/gatsby-plugin-glamor/\">Gatsby Glamor\nplugin</a> where it automatically\nextracts out the CSS used <em>in components on the page being server\nrendered</em> and automatically inlines those styles in the generated HTML\npage.</p>\n<p>Super fast CSS by default. 👏👏👏</p>\n<h2 id=\"creating-your-own-gatsbygram\"><a href=\"#creating-your-own-gatsbygram\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating your own Gatsbygram</h2>\n<p>It’s easy to create your own “Gatsbygram” site from an Instagram\naccount.</p>\n<h3 id=\"instructions-on-setting-up-your-own-gatsbygram-site\"><a href=\"#instructions-on-setting-up-your-own-gatsbygram-site\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Instructions on setting up your own Gatsbygram site.</h3>\n<pre><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># Clone the Gatsby repo.</span>\n<span class=\"token function\">git</span> clone -b 1.0 git@github.com:gatsbyjs/gatsby.git\n<span class=\"token function\">cd</span> gatsby/examples/gatsbygram\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># Remove the committed scrapped Instagram data</span>\n<span class=\"token function\">rm</span> -r data\n\n<span class=\"token comment\" spellcheck=\"true\"># Scrape a new account</span>\nnode scrape.js INSTAGRAM_USERNAME\n\n<span class=\"token comment\" spellcheck=\"true\"># Wait for pictures to download...</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># Start the Gatsby development server. The initial</span>\n<span class=\"token comment\" spellcheck=\"true\"># run will take extra time as it processes</span>\n<span class=\"token comment\" spellcheck=\"true\"># images the first time.</span>\ngatsby develop</code></pre>\n<p>While writing this post I scrapped a few accounts and published their\nresulting “Gatsbygram” sites:</p>\n<ul>\n<li><a href=\"https://iceland-gatsbygram.netlify.com\">https://iceland-gatsbygram.netlify.com</a></li>\n<li><a href=\"https://tinyhouses-gatsbygram.netlify.com\">https://tinyhouses-gatsbygram.netlify.com</a></li>\n</ul>\n<p><em>With thanks to Sam Bhagwatt, Sunil Pai, Nolan Lawson, Nik Graf,\nJeff Posnick, and Addy Osmani for their reviews.</em></p>\n<p><em>And a special thanks to Kristo Jorgenson for his <a href=\"https://github.com/gatsbyjs/gatsby/pull/708\">refactor of the “App\nstructure” section</a>.</em></p>",
            "excerpt": "Gatsbygram  is a clone of Instagram\nbuilt with Gatsby 1.0.0-alpha16 and is being continually updated as we\nmake our way towards our 1....",
            "timeToRead": 13,
            "fields": {
                "slug": "/blog/gatsbygram-case-study/"
            },
            "frontmatter": {
                "title": "Gatsbygram Case Study",
                "date": "Mar 9, 2017",
                "rawDate": "2017-03-09",
                "image": {
                    "childImageSharp": {
                        "resize": {
                            "src": "/36d57a55e7958223d8e1edc7d4bb0a38-7f8c7.png"
                        }
                    }
                },
                "author": {
                    "id": "Kyle Mathews",
                    "bio": "Founder @ GatsbyJS. Likes tech, reading/writing, founding things. Blogs at bricolage.io.",
                    "twitter": "@kylemathews",
                    "avatar": {
                        "childImageSharp": {
                            "responsiveResolution": {
                                "src": "/53e2930a00e3463fc960c3c2ff474c77-54d91.jpeg",
                                "srcSet": "/53e2930a00e3463fc960c3c2ff474c77-54d91.jpeg 1x,/53e2930a00e3463fc960c3c2ff474c77-7567f.jpeg 1.5x,/53e2930a00e3463fc960c3c2ff474c77-9a9f9.jpeg 2x,/53e2930a00e3463fc960c3c2ff474c77-0a328.jpeg 3x"
                            }
                        }
                    }
                }
            }
        }
    },
    "pathContext": {
        "slug": "/blog/gatsbygram-case-study/"
    }
}